[build-system]
requires = [
  "setuptools>=67",
  "wheel",
  "scikit-build-core>=0.7",
  "maturin>=1.4",
  "setuptools-rust>=1.8",
  "pybind11>=2.11"
]
build-backend = "setuptools.build_meta"

[project]
name = "crispr_screen_expert"
version = "0.1.0"
description = "CRISPR-studio core package for pooled CRISPR screen analysis and reporting."
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT License" }
authors = [
  { name = "CRISPR-studio Team" }
]
classifiers = [
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Bio-Informatics"
]
dependencies = [
  "pandas",
  "numpy",
  "scipy",
  "scikit-learn",
  "plotly",
  "dash",
  "dash-bootstrap-components",
  "gseapy",
  "mygene",
  "requests",
  "typer[all]",
  "jinja2",
  "weasyprint",
  "pydantic>=2",
  "pydantic-settings",
  "loguru",
  "psutil"
]

[project.optional-dependencies]
dev = [
  "pytest",
  "pytest-cov",
  "ruff",
  "mypy",
  "types-requests"
]
docs = [
  "mkdocs",
  "mkdocs-material"
]
llm = [
  "openai"
]
native = [
  "cmake>=3.22",
  "ninja>=1.11",
  "scikit-build-core>=0.7",
  "pybind11>=2.11",
  "maturin>=1.4",
  "setuptools-rust>=1.8"
]

[project.scripts]
crispr-studio = "crispr_screen_expert.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.maturin]
manifest-path = "rust/Cargo.toml"
module-name = "crispr_native_rust"
bindings = "pyo3"
python-source = "src"
strip = true

[tool.scikit-build]
build-dir = "cpp/build/{wheel_tag}"

[tool.scikit-build.cmake]
minimum-version = "3.22"
build-type = "Release"

[tool.scikit-build.ninja]
minimum-version = "1.11"

[tool.scikit-build.wheel]
expand-macos-universal-tags = true
