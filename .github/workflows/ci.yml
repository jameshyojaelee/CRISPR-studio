name: CI

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev,docs]
      - name: Ruff
        run: ruff check .
      - name: Mypy
        run: mypy src

  tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Run pytest
        run: pytest --cov=crispr_screen_expert --cov-report=term-missing

  native-tests:
    name: Native Tests
    runs-on: ${{ matrix.os }}
    needs: tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            rust/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('rust/Cargo.lock', 'rust/Cargo.toml') }}
      - name: Cache CMake builds
        uses: actions/cache@v3
        with:
          path: cpp/build/ci
          key: ${{ runner.os }}-cmake-${{ hashFiles('cpp/CMakeLists.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev,native]
      - name: Build Rust extension
        run: maturin develop --manifest-path rust/Cargo.toml --release
      - name: Build C++ extension
        run: |
          python -m scikit_build_core.build --wheel -S cpp -b cpp/build/ci -o cpp/dist
          pip install cpp/dist/*.whl
      - name: Pytest with native extensions
        run: pytest --maxfail=1 --disable-warnings

  build-docs:
    runs-on: ubuntu-latest
    needs: [tests, native-tests]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[docs]
      - name: Build docs
        run: |
          mkdocs build --strict || echo "Docs build not yet configured; skipping"
